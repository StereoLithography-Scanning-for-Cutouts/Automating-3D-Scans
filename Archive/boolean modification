import bpy

# Set the file path to your glb file
filepath = r"C:\Users\Yerdana\Downloads\poly.glb"

#Clear existing mesh objects in the scene (optional)
bpy.ops.object.select_all(action='DESELECT')
bpy.ops.object.select_by_type(type='MESH')
bpy.ops.object.delete()

#Import the glb file
bpy.ops.import_scene.gltf(filepath=filepath)

#Access the imported mesh object
imported_object = bpy.context.selected_objects[0]

#Measure the dimensions of the imported object
dimensions = imported_object.dimensions
print("Dimensions of the imported object:", dimensions)

# Introduce a cube with half the dimensions
cube_dimensions = (dimensions.x / 1.5, dimensions.y / 1.5, dimensions.z / 1.5)

# Create a new cube
bpy.ops.mesh.primitive_cube_add(size=1, enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=cube_dimensions)

# Access the newly created cube object
new_cube = bpy.context.active_object

#Add a Boolean modifier to the cube
bool_modifier = new_cube.modifiers.new(name="Boolean", type='BOOLEAN')
bool_modifier.operation = 'DIFFERENCE'

# Set the target object for the Boolean operation (your 3D face scan)
bool_modifier.use_self = False  # Set to False if using a separate object
bool_modifier.object = imported_object

# Apply the modifier to see the result
bpy.ops.object.modifier_apply({"object": new_cube}, modifier="Boolean")

# Import the glb file
bpy.ops.import_scene.gltf(filepath=filepath)

# Access the imported mesh object
imported_object = bpy.context.selected_objects[0]

# Set the location where you want to move the imported object
import_location = (0, 0.05, 0)  # Change this to the desired location

# Move the imported object to the specified location
bpy.ops.transform.translate(value=import_location)

# Print the updated location of the imported object
print("Location of the imported object:", imported_object.location)

#Measure the dimensions of the imported object
dimensions = imported_object.dimensions
print("Dimensions of the imported object:", dimensions)

# Introduce a cube with half the dimensions
cube_dimensions1 = (dimensions.x / 1.5, dimensions.y / 1.5, dimensions.z / 1.5)

# Create a new cube
bpy.ops.mesh.primitive_cube_add(size=1, enter_editmode=False, align='WORLD', location=(0, 0.05, 0), scale=cube_dimensions1)

# Access the newly created cube object
new_cube1 = bpy.context.active_object

#Add a Boolean modifier to the cube
bool_modifier = new_cube1.modifiers.new(name="Boolean", type='BOOLEAN')
bool_modifier.operation = 'INTERSECT'

# Set the target object for the Boolean operation (your 3D face scan)
bool_modifier.use_self = False  # Set to False if using a separate object
bool_modifier.object = imported_object

# Apply the modifier to see the result
bpy.ops.object.modifier_apply({"object": new_cube1}, modifier="Boolean")



